$asset-base-path: '/profiles/greencko' !default;

/// Image asset helper
/// @access public
/// @param {String} $file - Asset file name, excluding extension
/// @return {URL} - A `url()` function leading to the image
/// @require {function} asset
@function image($filename) {
  @return url($asset-base-path + '/img/' + $filename + '.jpg');
}

/// Image asset helper
/// @access public
/// @param {String} $file - Asset file name, excluding extension
/// @return {URL} - A `url()` function leading to the image
/// @require {function} asset
@function imageoftype($filename, $type) {
  @return url($asset-base-path + '/img/' + $filename + '.'+ $type);
}

/// Icon asset helper
/// @access public
/// @param {String} $filename - Asset file name, excluding extension
/// @param {String} $colorvariation - Color of the Icon
/// @return {URL} - A `url()` function leading to the font
/// @require {function} asset
@function icon($filename) {
  @return url($asset-base-path + '/ico/' + $filename + '.svg');
}

/// Icon asset helper
/// @access public
/// @param {String} $filename - Asset file name, excluding extension
/// @param {String} $colorvariation - Color of the Icon
/// @return {URL} - A `url()` function leading to the font
/// @require {function} asset
@function icon($filename, $colorvariation) {
  @return url($asset-base-path + '/ico/' + $filename + '--' + $colorvariation + '.svg');
}

/// Font asset helper
/// @access public
/// @param {String} $file - Asset file name, including extension
/// @return {URL} - A `url()` function leading to the font
/// @require {function} asset
@function font($file) {
  @return url($asset-base-path + '/fonts/' + $file);
}
